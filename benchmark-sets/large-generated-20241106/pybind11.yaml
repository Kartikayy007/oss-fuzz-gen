functions:
- name: _ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
  params:
  - name: this
    type: 'bool '
  - name: find_type
    type: 'bool '
  - name: throw_if_missing
    type: 'bool '
  - name: ''
    type: bool
  return_type: void
  signature: struct value_and_holder pybind11::detail::instance::get_value_and_holder(struct
    instance *, const struct type_info *, bool)
- name: _ZN8pybind116detail19deregister_instanceEPNS0_8instanceEPvPKNS0_9type_infoE
  params:
  - name: self
    type: 'bool '
  - name: valptr
    type: 'bool '
  - name: tinfo
    type: 'bool '
  return_type: bool
  signature: bool pybind11::detail::deregister_instance(struct instance *, void *,
    const struct type_info *)
- name: _ZN8pybind116detail17make_new_instanceEP11_typeobject
  params:
  - name: type
    type: 'bool '
  return_type: void
  signature: PyObject * pybind11::detail::make_new_instance(PyTypeObject *)
- name: _ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
  params:
  - name: self
    type: 'bool '
  - name: args_in
    type: 'bool '
  - name: kwargs_in
    type: 'bool '
  return_type: void
  signature: PyObject * pybind11::cpp_function::dispatcher(PyObject *, PyObject *,
    PyObject *)
- name: _ZN8pybind116detail14clear_instanceEP7_object
  params:
  - name: self
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::clear_instance(PyObject *)
- name: _ZN8pybind117module_6importEPKc
  params:
  - name: name
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: module_ pybind11::module_::import(const char *)
language: c++
project: pybind11
target_name: pybind_fuzzer
target_path: /src/pybind_fuzzer.cc
test_files:
- test_file_path: /src/pybind11/tests/test_eval.cpp
- test_file_path: /src/pybind11/tests/test_constants_and_functions.cpp
- test_file_path: /src/pybind11/tests/exo_planet_c_api.cpp
- test_file_path: /src/pybind11/tests/test_numpy_vectorize.cpp
- test_file_path: /src/pybind11/tests/test_iostream.cpp
- test_file_path: /src/pybind11/tests/cross_module_gil_utils.cpp
