"functions":
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use4nameEv"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string simdjson::internal::detect_best_supported_implementation_on_first_use::name()"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation6stage2ERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::stage2(document &)"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation5parseEPKhmRNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::parse(const uint8_t *, size_t, document &)"
- "name": "_ZN8simdjson7icelake13numberparsingL18slow_float_parsingEPKhPd"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::numberparsing::slow_float_parsing(const uint8_t *, double *)"
- "name": "_ZN8simdjson8internal10from_charsEPKcS2_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "double"
  "signature": "double simdjson::internal::from_chars(const char *, const char *)"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use11descriptionEv"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string simdjson::internal::detect_best_supported_implementation_on_first_use::description()"
- "name": "_ZN8simdjson8westmere25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::westmere::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZN8simdjson8fallback25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::fallback::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZN8simdjson7icelake13numberparsing12_GLOBAL__N_120parse_float_fallbackEPKhPd"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool simdjson::icelake::numberparsing::(anonymous namespace)::parse_float_fallback(const uint8_t *, double *)"
"language": "c++"
"project": "simdjson"
"target_name": "fuzz_padded"
"target_path": "/src/simdjson/fuzz/fuzz_padded.cpp"
"test_files":
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_car_tag_invoke_deserialization.cpp"
- "test_file_path": "/src/simdjson/tests/dom/minefieldcheck.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_car_deserialization.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_stl_types_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_array_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/compilation_failure_tests/iterate_string_view.cpp"
- "test_file_path": "/src/simdjson/tests/checkimplementation.cpp"
- "test_file_path": "/src/simdjson/tests/dom/readme_examples.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_wrong_type_error_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_object_error_tests.cpp"
