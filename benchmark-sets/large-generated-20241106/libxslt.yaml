functions:
- name: xmlXIncludeProcessTreeFlags
  params:
  - name: tree
    type: 'bool '
  - name: flags
    type: int
  return_type: int
  signature: int xmlXIncludeProcessTreeFlags(xmlNodePtr, int)
- name: xmlParseCtxtExternalEntity
  params:
  - name: ctxt
    type: 'bool '
  - name: URL
    type: 'bool '
  - name: ID
    type: 'bool '
  - name: listOut
    type: 'bool '
  return_type: int
  signature: int xmlParseCtxtExternalEntity(xmlParserCtxtPtr, const xmlChar *, const
    xmlChar *, xmlNodePtr *)
- name: htmlCreateMemoryParserCtxt
  params:
  - name: buffer
    type: 'bool '
  - name: size
    type: int
  return_type: void
  signature: htmlParserCtxtPtr htmlCreateMemoryParserCtxt(const char *, int)
- name: xmlACatalogResolvePublic
  params:
  - name: catal
    type: 'bool '
  - name: pubID
    type: 'bool '
  return_type: void
  signature: xmlChar * xmlACatalogResolvePublic(xmlCatalogPtr, const xmlChar *)
- name: xmlACatalogResolveSystem
  params:
  - name: catal
    type: 'bool '
  - name: sysID
    type: 'bool '
  return_type: void
  signature: xmlChar * xmlACatalogResolveSystem(xmlCatalogPtr, const xmlChar *)
- name: htmlCreateFileParserCtxt
  params:
  - name: filename
    type: 'bool '
  - name: encoding
    type: 'bool '
  return_type: void
  signature: htmlParserCtxtPtr htmlCreateFileParserCtxt(const char *, const char *)
language: c++
project: libxslt
target_name: xpath
target_path: /src/libxslt/tests/fuzz/xpath.c
test_files:
- test_file_path: /src/libxslt/xsltproc/testThreads.c
- test_file_path: /src/libxslt/examples/xsltICUSort.c
- test_file_path: /src/libxslt/tests/testplugin.c
- test_file_path: /src/libxslt/tests/runtest.c
