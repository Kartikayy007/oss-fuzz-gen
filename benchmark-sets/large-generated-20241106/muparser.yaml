functions:
- name: _ZN2mu10ParserBaseC2ERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::ParserBase(const ParserBase &)
- name: _ZN2mu10ParserBase4EvalEPdi
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  return_type: void
  signature: void mu::ParserBase::Eval(value_type *, int)
- name: _ZN2mu10ParserBase14DefineStrConstERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::DefineStrConst(const string_type &, const string_type
    &)
- name: _ZNK2mu10ParserBase10GetUsedVarEv
  params:
  - name: ''
    type: 'bool '
  return_type: void
  signature: const varmap_type & mu::ParserBase::GetUsedVar()
- name: _ZN2mu10ParserBase10DefineOprtERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPFdddEjNS_18EOprtAssociativityEb
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  - name: ''
    type: int
  - name: ''
    type: bool
  return_type: void
  signature: void mu::ParserBase::DefineOprt(const string_type &, fun_type2, unsigned
    int, DW_TAG_enumeration_typeEOprtAssociativity, bool)
- name: _ZNK2mu10ParserBase4EvalERi
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: value_type * mu::ParserBase::Eval(int &)
language: c++
project: muparser
target_name: set_eval_fuzzer
target_path: /src/set_eval_fuzzer.cc
test_files:
- test_file_path: /src/muparser/samples/example2/example2.c
- test_file_path: /src/muparser/samples/example1/example1.cpp
- test_file_path: /src/muparser/test/t_ParserTest.cpp
- test_file_path: /src/muparser/samples/example3/example3.cpp
