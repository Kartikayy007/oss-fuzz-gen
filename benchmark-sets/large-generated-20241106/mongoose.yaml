"functions":
- "name": "mg_hello"
  "params":
  - "name": "url"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_hello(const char *)"
- "name": "mg_mqtt_connect"
  "params":
  - "name": "mgr"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "fn_data"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_mqtt_connect(struct mg_mgr *, const char *, const struct mg_mqtt_opts *, mg_event_handler_t, void *)"
- "name": "mg_ws_connect"
  "params":
  - "name": "mgr"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "fn_data"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_ws_connect(struct mg_mgr *, const char *, mg_event_handler_t, void *, const char *, void)"
- "name": "mg_sntp_connect"
  "params":
  - "name": "mgr"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "fnd"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_sntp_connect(struct mg_mgr *, const char *, mg_event_handler_t, void *)"
- "name": "mg_rpc_process"
  "params":
  - "name": "r"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_process(struct mg_rpc_req *)"
- "name": "mg_http_upload"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "hm"
    "type": "bool "
  - "name": "fs"
    "type": "bool "
  - "name": "dir"
    "type": "bool "
  - "name": "max_size"
    "type": "size_t"
  "return_type": "size_t"
  "signature": "long mg_http_upload(struct mg_connection *, struct mg_http_message *, struct mg_fs *, const char *, size_t)"
- "name": "mg_ws_upgrade"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "hm"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_ws_upgrade(struct mg_connection *, struct mg_http_message *, const char *, void)"
- "name": "mg_rpc_list"
  "params":
  - "name": "r"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_list(struct mg_rpc_req *)"
- "name": "mg_rpc_ok"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_ok(struct mg_rpc_req *, const char *, void)"
- "name": "mg_rpc_err"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "code"
    "type": "int"
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_err(struct mg_rpc_req *, int, const char *, void)"
"language": "c++"
"project": "mongoose"
"target_name": "fuzz"
"target_path": "/src/mongoose/test/fuzz.c"
"test_files":
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f429zi-cube-freertos-lwip/Middlewares/Third_Party/LwIP/src/core/stats.c"
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f429zi-cube-freertos-lwip/Middlewares/Third_Party/LwIP/src/netif/ppp/magic.c"
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f746zg-cube-freertos-lwip/Middlewares/Third_Party/LwIP/src/netif/ppp/chap_ms.c"
- "test_file_path": "/src/mongoose/examples/uart-bridge/net.c"
- "test_file_path": "/src/mongoose/examples/uart-bridge/main.c"
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f746zg-cube-freertos-lwip/Middlewares/Third_Party/LwIP/src/netif/ppp/mppe.c"
- "test_file_path": "/src/mongoose/examples/nxp/frdm-mcxn947-xpresso-baremetal-builtin/component/lists/fsl_component_generic_list.c"
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f746zg-cube-freertos-lwip/Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c"
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f429zi-cube-freertos-lwip/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c"
- "test_file_path": "/src/mongoose/examples/stm32/nucleo-f746zg-keil-freertos_cmsis2/syscalls.c"
