"functions":
- "name": "amqp_basic_cancel"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  - "name": "consumer_tag"
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "amqp_basic_cancel_ok_t * amqp_basic_cancel(amqp_connection_state_t, amqp_channel_t, amqp_bytes_t)"
- "name": "amqp_basic_recover"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  - "name": "requeue"
    "type": "int"
  "return_type": "void"
  "signature": "amqp_basic_recover_ok_t * amqp_basic_recover(amqp_connection_state_t, amqp_channel_t, amqp_boolean_t)"
- "name": "amqp_connection_close"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "code"
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "amqp_rpc_reply_t amqp_connection_close(amqp_connection_state_t, int)"
- "name": "amqp_tx_select"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  "return_type": "void"
  "signature": "amqp_tx_select_ok_t * amqp_tx_select(amqp_connection_state_t, amqp_channel_t)"
- "name": "amqp_confirm_select"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  "return_type": "void"
  "signature": "amqp_confirm_select_ok_t * amqp_confirm_select(amqp_connection_state_t, amqp_channel_t)"
- "name": "amqp_tx_rollback"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  "return_type": "void"
  "signature": "amqp_tx_rollback_ok_t * amqp_tx_rollback(amqp_connection_state_t, amqp_channel_t)"
- "name": "amqp_tx_commit"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  "return_type": "void"
  "signature": "amqp_tx_commit_ok_t * amqp_tx_commit(amqp_connection_state_t, amqp_channel_t)"
- "name": "amqp_basic_consume"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "short"
  - "name": "queue"
    "type": "size_t"
  - "name": "consumer_tag"
    "type": "bool "
  - "name": "no_local"
    "type": "size_t"
  - "name": "no_ack"
    "type": "bool "
  - "name": "exclusive"
    "type": "int"
  - "name": "arguments"
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "amqp_basic_consume_ok_t * amqp_basic_consume(amqp_connection_state_t, amqp_channel_t, amqp_bytes_t, amqp_bytes_t, amqp_boolean_t, amqp_boolean_t, amqp_boolean_t, amqp_table_t)"
- "name": "amqp_login_with_properties"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "vhost"
    "type": "bool "
  - "name": "channel_max"
    "type": "bool "
  - "name": "frame_max"
    "type": "int"
  - "name": "heartbeat"
    "type": "int"
  - "name": "client_properties"
    "type": "int"
  - "name": "sasl_method"
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "amqp_rpc_reply_t amqp_login_with_properties(amqp_connection_state_t, const char *, int, int, int, const amqp_table_t *, amqp_sasl_method_enum, void)"
- "name": "amqp_channel_close"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": "channel"
    "type": "bool "
  - "name": "code"
    "type": "short"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "amqp_rpc_reply_t amqp_channel_close(amqp_connection_state_t, amqp_channel_t, int)"
"language": "c"
"project": "rabbitmq-c"
"target_name": "fuzz_url"
"target_path": "/src/librabbitmq/fuzz/fuzz_url.c"
"test_files":
- "test_file_path": "/src/librabbitmq/examples/amqp_producer.c"
- "test_file_path": "/src/librabbitmq/examples/unix/platform_utils.c"
- "test_file_path": "/src/librabbitmq/examples/amqp_rpc_sendstring_client.c"
- "test_file_path": "/src/librabbitmq/examples/amqp_connect_timeout.c"
- "test_file_path": "/src/librabbitmq/examples/amqp_confirm_select.c"
- "test_file_path": "/src/librabbitmq/tests/test_parse_url.c"
- "test_file_path": "/src/librabbitmq/tests/test_sasl_mechanism.c"
- "test_file_path": "/src/librabbitmq/tests/test_basic.c"
- "test_file_path": "/src/librabbitmq/examples/amqp_bind.c"
- "test_file_path": "/src/librabbitmq/examples/win32/platform_utils.c"
